var X=Object.create;var y=Object.defineProperty,Z=Object.defineProperties,ee=Object.getOwnPropertyDescriptor,te=Object.getOwnPropertyDescriptors,oe=Object.getOwnPropertyNames,T=Object.getOwnPropertySymbols,ne=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable;var G=(e,t,o)=>t in e?y(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,c=(e,t)=>{for(var o in t||(t={}))g.call(t,o)&&G(e,o,t[o]);if(T)for(var o of T(t))k.call(t,o)&&G(e,o,t[o]);return e},f=(e,t)=>Z(e,te(t)),s=(e,t)=>y(e,"name",{value:t,configurable:!0});var E=(e,t)=>{var o={};for(var n in e)g.call(e,n)&&t.indexOf(n)<0&&(o[n]=e[n]);if(e!=null&&T)for(var n of T(e))t.indexOf(n)<0&&k.call(e,n)&&(o[n]=e[n]);return o};var re=(e,t)=>{for(var o in t)y(e,o,{get:t[o],enumerable:!0})},D=(e,t,o,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of oe(t))!g.call(e,i)&&i!==o&&y(e,i,{get:()=>t[i],enumerable:!(n=ee(t,i))||n.enumerable});return e};var b=(e,t,o)=>(o=e!=null?X(ne(e)):{},D(t||!e||!e.__esModule?y(o,"default",{value:e,enumerable:!0}):o,e)),ie=e=>D(y({},"__esModule",{value:!0}),e);var Pe={};re(Pe,{ALL_TYPES:()=>Ee,MUTATION_TYPES:()=>me,QUERY_TYPES:()=>de,default:()=>fe,introspectSchema:()=>v,isResourceExcluded:()=>$,isResourceIncluded:()=>F});module.exports=ie(Pe);var W=b(require("lodash/merge")),H=b(require("lodash/get")),P=b(require("pluralize")),r=require("ra-core");var u=require("@apollo/client"),j=s(e=>{if(!e)return new u.ApolloClient({cache:new u.InMemoryCache().restore({})});let p=e,{cache:t=new u.InMemoryCache().restore({}),uri:o,link:n=o?new u.HttpLink({uri:o}):void 0}=p,i=E(p,["cache","uri","link"]);return new u.ApolloClient(c({link:n,cache:t},i))},"default");var a=require("ra-core"),S=[a.GET_LIST,a.GET_MANY,a.GET_MANY_REFERENCE,a.GET_ONE],_=[a.CREATE,a.UPDATE,a.DELETE,a.UPDATE_MANY,a.DELETE_MANY],I=S.concat(_);var q=require("graphql"),U=require("@apollo/client");var h,v=s(async(e,t)=>h||(h=se(e,t),h),"introspectSchema"),se=s(async(e,t)=>{let o=t.schema?t.schema:await ae(e),n=pe(o),i=ce(o),p=ue(i,n,t);return{types:i,queries:n,resources:p,schema:o}},"runSchemaIntrospection"),ae=s(e=>e.query({fetchPolicy:"network-only",query:U.gql`
                ${(0,q.getIntrospectionQuery)()}
            `}).then(({data:{__schema:t}})=>t),"fetchSchema"),pe=s(e=>e.types.reduce((t,o)=>{var n,i;return o.name!==((n=e.queryType)==null?void 0:n.name)&&o.name!==((i=e.mutationType)==null?void 0:i.name)&&o.fields?t:[...t,...o.fields||[]]},[]),"getQueriesFromSchema"),ce=s(e=>e.types.filter(t=>t.name!==(e.queryType&&e.queryType.name)&&t.name!==(e.mutationType&&e.mutationType.name)),"getTypesFromSchema"),ue=s((e,t,o)=>e.filter(i=>le(i,t,o)).map(i=>ye(i,t,o)),"getResources"),le=s((e,t,o)=>F(e,o)?!0:$(e,o)?!1:Object.keys(o.operationNames).map(p=>o.operationNames[p](e)).some(p=>t.find(({name:l})=>l===p)),"isResource"),F=s((e,{include:t}={})=>Array.isArray(t)?t.includes(e.name):typeof t=="function"?t(e):!1,"isResourceIncluded"),$=s((e,{exclude:t}={})=>Array.isArray(t)?t.includes(e.name):typeof t=="function"?t(e):!1,"isResourceExcluded"),ye=s((e,t,o)=>I.reduce((n,i)=>{let p=t.find(({name:l})=>o.operationNames[i]&&l===o.operationNames[i](e));return p?f(c({},n),{[i]:p}):n},{type:e}),"buildResource");var de=S,me=_,Ee=I,Oe={getList:r.GET_LIST,getMany:r.GET_MANY,getManyReference:r.GET_MANY_REFERENCE,getOne:r.GET_ONE,create:r.CREATE,delete:r.DELETE,deleteMany:r.DELETE_MANY,update:r.UPDATE,updateMany:r.UPDATE_MANY},Te={resolveIntrospection:v,introspection:{operationNames:{[r.GET_LIST]:e=>`all${(0,P.default)(e.name)}`,[r.GET_ONE]:e=>`${e.name}`,[r.GET_MANY]:e=>`all${(0,P.default)(e.name)}`,[r.GET_MANY_REFERENCE]:e=>`all${(0,P.default)(e.name)}`,[r.CREATE]:e=>`create${e.name}`,[r.UPDATE]:e=>`update${e.name}`,[r.DELETE]:e=>`delete${e.name}`},exclude:void 0,include:void 0}},B=s((e,t,o)=>typeof e=="function"?e(o,t):e,"getOptions"),fe=s(async e=>{let w=(0,W.default)({},Te,e),{client:t,clientOptions:o,introspection:n,resolveIntrospection:i,buildQuery:p,override:l={}}=w,M=E(w,["client","clientOptions","introspection","resolveIntrospection","buildQuery","override"]);l&&process.env.NODE_ENV==="production"&&console.warn("The override option is deprecated. You should instead wrap the buildQuery function provided by the dataProvider you use.");let A=t||j(o),N;return new Proxy(he,{get:(Re,R)=>{if(typeof R=="symbol"||R==="then")return;let d=Oe[R];return async(m,Q)=>{n&&(N=await i(A,n));let Y=p(N),x=(0,H.default)(l,`${m}.${d}`),C=x?c(c({},Y(d,m,Q)),x(Q)):Y(d,m,Q),{parseResponse:L}=C,O=E(C,["parseResponse"]);if(Ie(O.query)==="query"){let J=c(f(c({},O),{fetchPolicy:"network-only"}),B(M.query,d,m));return A.query(J).then(K=>L(K)).catch(V)}let z=c({mutation:O.query,variables:O.variables},B(M.mutation,d,m));return A.mutate(z).then(L).catch(V)}}})},"default"),V=s(e=>{var t,o;throw e!=null&&e.networkError?new r.HttpError((t=e==null?void 0:e.networkError)==null?void 0:t.message,(o=e==null?void 0:e.networkError)==null?void 0:o.statusCode):new r.HttpError(e.message,200,e)},"handleError"),Ie=s(e=>{if(e&&e.definitions&&e.definitions.length>0)return e.definitions[0].operation;throw new Error("Unable to determine the query operation")},"getQueryOperation"),he={create:()=>Promise.resolve({data:null}),delete:()=>Promise.resolve({data:null}),deleteMany:()=>Promise.resolve({data:[]}),getList:()=>Promise.resolve({data:[],total:0}),getMany:()=>Promise.resolve({data:[]}),getManyReference:()=>Promise.resolve({data:[],total:0}),getOne:()=>Promise.resolve({data:null}),update:()=>Promise.resolve({data:null}),updateMany:()=>Promise.resolve({data:[]})};0&&(module.exports={ALL_TYPES,MUTATION_TYPES,QUERY_TYPES,introspectSchema,isResourceExcluded,isResourceIncluded});
//# sourceMappingURL=index.js.map